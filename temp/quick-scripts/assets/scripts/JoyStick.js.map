{"version":3,"sources":["JoyStick.js"],"names":["cc","Class","extends","Component","properties","moveRadius","onLoad","setTouchListener","originPos","node","getPosition","stickSize","getContentSize","ratio","stickDistance","touchLocalX","touchLocalY","moveVec","p","stickGo","self","eventManager","addListener","event","EventListener","TOUCH_ALL_AT_ONCE","onTouchesBegan","touches","getStickStatus","changeStickStatus","onTouchesMoved","setPosition","x","y","onTouchesEnded","sendEvent","touch","getLocation","touchLocal","convertToNodeSpace","width","height","pDistance","setPositionX","setPositionY","returnMyCommands","emit","moveVector","start","update","dt","commandX","commandY"],"mappings":"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","file":"JoyStick.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["/*\r\n * 简单的游戏摇杆实现\r\n * 使用方法：\r\n * 1.加载本组件的预制件\r\n * 2.在需要受控制的模块监听“本节点”的VirtualStick事件\r\n *\r\n * 注意：\r\n * 最合适的用法，是将此预制件拖入自定义控件，再将JoyStick子节点引入需要它控制的模块，再监听事件。\r\n */\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        moveRadius: 0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.setTouchListener();\r\n        this.originPos = this.node.getPosition();\r\n        this.stickSize = this.node.getContentSize();\r\n        this.ratio = 0;\r\n        this.stickDistance = 0;\r\n        this.touchLocalX = 0;\r\n        this.touchLocalY = 0;\r\n        this.moveVec = cc.p(0, 0);\r\n        this.stickGo = false;\r\n    },\r\n\r\n    // 监听内置触摸事件，并处理摇杆对应的逻辑\r\n    setTouchListener() {\r\n\r\n        var self = this;\r\n\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.TOUCH_ALL_AT_ONCE,\r\n\r\n            onTouchesBegan(touches, event) {\r\n                self.getStickStatus(touches);\r\n                if (self.touchLocalX < 60 && self.touchLocalY < 60) {\r\n                    self.stickGo = true;\r\n                    self.changeStickStatus();\r\n                }\r\n            },\r\n\r\n            onTouchesMoved(touches, event) {\r\n                self.node.setPosition(self.originPos.x, self.originPos.y);\r\n                self.getStickStatus(touches);\r\n                if (self.stickGo == true) {\r\n                    self.changeStickStatus();\r\n                }\r\n            },\r\n\r\n            onTouchesEnded(touches, event) {\r\n                self.node.setPosition(self.originPos.x, self.originPos.y);\r\n                self.touchLocalX = 0;\r\n                self.touchLocalY = 0;\r\n                self.stickGo = false;\r\n                self.sendEvent();\r\n            }\r\n        }, self.node);\r\n    },\r\n\r\n    //获取并处理一些摇杆相关的变量\r\n    getStickStatus(touches) {\r\n        // 父节点坐标，触摸监听只返回左上角坐标系\r\n        var touch = touches[0].getLocation();\r\n        // 摇杆子节点坐标，原点位于摇杆左下角\r\n        var touchLocal = this.node.convertToNodeSpace(touch);\r\n        // 以下处理将坐标系锚点换为摇杆节点的水平垂直居中点\r\n        this.touchLocalX = touchLocal.x - this.stickSize.width / 2;\r\n        this.touchLocalY = touchLocal.y - this.stickSize.height / 2;\r\n\r\n        this.stickDistance = cc.pDistance(cc.p(this.touchLocalX, this.touchLocalY), cc.p(0, 0));\r\n\r\n        this.ratio = this.moveRadius / this.stickDistance;\r\n    },\r\n\r\n    //改变摇杆的外貌，并将状态用自定义事件发送出去\r\n    changeStickStatus() {\r\n        if (this.stickDistance <= this.moveRadius) {\r\n            this.node.setPositionX(this.originPos.x + this.touchLocalX);\r\n            this.node.setPositionY(this.originPos.y + this.touchLocalY);\r\n        } else {\r\n            this.node.setPositionX(this.originPos.x + this.touchLocalX * this.ratio);\r\n            this.node.setPositionY(this.originPos.y + this.touchLocalY * this.ratio);\r\n        }\r\n        this.sendEvent();\r\n    },\r\n\r\n    //发送自定义的VirtualStick事件\r\n    sendEvent() {\r\n        this.moveVec = this.returnMyCommands();\r\n        this.node.emit('VirtualStick', {\r\n            moveVector: this.moveVec,\r\n        });\r\n    },\r\n\r\n    start() {},\r\n\r\n    update(dt) {},\r\n\r\n    //生成VirtualStick事件需要的数据\r\n    returnMyCommands() {\r\n        let commandX = this.touchLocalX * this.ratio;\r\n        let commandY = this.touchLocalY * this.ratio;\r\n        return cc.p(commandX, commandY);\r\n    }\r\n});"]}